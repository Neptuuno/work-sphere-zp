@model SocialNetwork.Models.ViewModels.ChatViewModel

@{
    ViewData["Title"] = "Chat with " + Model.UserOther?.UserName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    @if (Model.UserOther == null)
    {
        <h4>You are alone in the chat</h4>
        <script>
            document.getElementById("messageInput").disabled = true;
            document.getElementById("sendButton").disabled = true;
        </script>
    }
    else
    {
        <h4>Other: @Model.UserOther.UserName</h4>
    }
</div>
<div>
    <ul id="messagesList">
        @foreach (var message in Model.Messages)
        {
            var messageClass = message.SenderId == Model.UserSelf.Id ? "self-message" : "other-message";
            <li class="@messageClass">@message.Content</li>
        }
    </ul>
</div>

<div class="rounded p-2 text-gray-900 shadow-offset border border-black w-1/2 flex justify-between items-center">
    <div class="flex gap-2 w-full items-center">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6 text-primary">
          <path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25ZM12.75 9a.75.75 0 0 0-1.5 0v2.25H9a.75.75 0 0 0 0 1.5h2.25V15a.75.75 0 0 0 1.5 0v-2.25H15a.75.75 0 0 0 0-1.5h-2.25V9Z" clip-rule="evenodd" />
        </svg>
        <input type="text" class="bg-primary rounded placeholder-black w-11/12 p-1" id="messageInput" placeholder="Aa"/>
    </div>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6 text-primary cursor-pointer" id="sendButton">
        <path d="M3.478 2.404a.75.75 0 0 0-.926.941l2.432 7.905H13.5a.75.75 0 0 1 0 1.5H4.984l-2.432 7.905a.75.75 0 0 0 .926.94 60.519 60.519 0 0 0 18.445-8.986.75.75 0 0 0 0-1.218A60.517 60.517 0 0 0 3.478 2.404Z" />
    </svg>
</div>


<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
"use strict";

let connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();
let senderId = '@Model.UserSelf.Id';
let receiverId = '@Model.UserOther.Id';
let chatId = parseInt('@Model.Id');

connection.start().catch(function (err) {
    return console.error(err.toString());
});

connection.on("ReceiveMessage", function (message) {
    let li = document.createElement("li");
    li.textContent = message.content;
    document.getElementById("messagesList").appendChild(li);
});

document.getElementById("sendButton").addEventListener("click", function (event) {
    let message = document.getElementById("messageInput").value;
    connection.invoke("SendMessage", chatId, senderId, receiverId, message).catch(function (err) {
        return console.error(err.toString());
    });
    event.preventDefault();
});
</script>

<style>
    .self-message{
    color: green;
    }
    
    .other-message{
    color: red;
    }
    
</style>