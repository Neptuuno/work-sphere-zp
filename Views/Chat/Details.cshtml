@model SocialNetwork.Models.ChatModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div>
    <h4>Chat Details</h4>
    <hr/>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
    </dl>
    <h4>Users in this chat</h4>
    <ul>
        @foreach (var chatUser in Model.ChatUsers)
        {
            <li>@chatUser.User.UserName</li>
        }
    </ul>
</div>

<div>
    <input type="text" id="userInput"/>
    <input type="text" id="messageInput"/>
    <input type="button" id="sendButton" value="Send"/>
    <ul id="messagesList"></ul>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
"use strict";

var connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();

//Disable the send button until connection is established.
document.getElementById("sendButton").disabled = true;

connection.on("ReceiveMessage", function (user, message) {
    var li = document.createElement("li");
    document.getElementById("messagesList").appendChild(li);
    // We can assign user-supplied strings to an element's textContent because it
    // is not interpreted as markup. If you're assigning in any other way, you
    // should be aware of possible script injection concerns.
    li.textContent = `${user} says ${message}`;
});

connection.start().then(function () {
    document.getElementById("sendButton").disabled = false;
}).catch(function (err) {
    return console.error(err.toString());
});

document.getElementById("sendButton").addEventListener("click", function (event) {
    var user = document.getElementById("userInput").value;
    var message = document.getElementById("messageInput").value;
    connection.invoke("SendMessage", user, message).catch(function (err) {
        return console.error(err.toString());
    });
    event.preventDefault();
});
</script>