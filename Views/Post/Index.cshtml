@model IEnumerable<SocialNetwork.Models.PostModel>

@{
    ViewData["Title"] = "Index";
}

@{
    var colors = new string[] { "gray", "red", "yellow", "green", "blue", "indigo", "purple", "pink" };
    var variants = new int[] { 100, 200, 300, 400, 500, 600, 700, 800, 900 };
}
<div class="font-thin">I dont undestand</div>
@foreach (var color in colors)
{
    foreach (var variant in variants)
    {
        <div class="text-@color-@variant">
            Text with color @color-@variant
        </div>
        <div class="bg-@color-@variant">
            Background with color @color-@variant
        </div>
    }
}

@if (Model.Any())
{
    <div x-data="{ tab: 'all'}">
        <div class="flex justify-center gap-8 mb-8">
            <div class="flex items-center cursor-pointer" :class="{ 'border-b-primary border-b-2': tab === 'all' }" x-on:click="tab = 'all'">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="m6.115 5.19.319 1.913A6 6 0 0 0 8.11 10.36L9.75 12l-.387.775c-.217.433-.132.956.21 1.298l1.348 1.348c.21.21.329.497.329.795v1.089c0 .426.24.815.622 1.006l.153.076c.433.217.956.132 1.298-.21l.723-.723a8.7 8.7 0 0 0 2.288-4.042 1.087 1.087 0 0 0-.358-1.099l-1.33-1.108c-.251-.21-.582-.299-.905-.245l-1.17.195a1.125 1.125 0 0 1-.98-.314l-.295-.295a1.125 1.125 0 0 1 0-1.591l.13-.132a1.125 1.125 0 0 1 1.3-.21l.603.302a.809.809 0 0 0 1.086-1.086L14.25 7.5l1.256-.837a4.5 4.5 0 0 0 1.528-1.732l.146-.292M6.115 5.19A9 9 0 1 0 17.18 4.64M6.115 5.19A8.965 8.965 0 0 1 12 3c1.929 0 3.716.607 5.18 1.64"/>
                </svg>
                <h2 class="text-2xl">Exploring</h2>
            </div>
            <div class="flex items-center cursor-pointer" :class="{ 'border-b-primary border-b-2': tab === 'looking' }" x-on:click="tab = 'looking'">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z"/>
                    <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"/>
                </svg>
                <h2 class="text-2xl">Looking</h2>
            </div>
            <div class="flex items-center cursor-pointer" :class="{ 'border-b-primary border-b-2': tab === 'offering' }" x-on:click="tab = 'offering'">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 0 0 .75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 0 0-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0 1 12 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 0 1-.673-.38m0 0A2.18 2.18 0 0 1 3 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 0 1 3.413-.387m7.5 0V5.25A2.25 2.25 0 0 0 13.5 3h-3a2.25 2.25 0 0 0-2.25 2.25v.894m7.5 0a48.667 48.667 0 0 0-7.5 0M12 12.75h.008v.008H12v-.008Z"/>
                </svg>
                <h2 class="text-2xl">Offering</h2>
            </div>
        </div>


        <!-- All posts -->
        <div class="flex flex-col gap-16 items-center" x-show="tab === 'all'" x-transition>
            @foreach (var item in Model)
            {
                @await Html.PartialAsync("_PostDetailsPartial", item)
            }
        </div>

        <!-- Looking posts -->
        <div class="flex flex-col gap-16 items-center" x-show="tab === 'looking'" x-transition>
                    @foreach (var item in Model.Where(p => p.PostType == PostType.Looking))
                    {
                        @await Html.PartialAsync("_PostDetailsPartial", item)
                    }
                </div>

        <!-- Offering posts -->
        <div class="flex flex-col gap-16 items-center" x-show="tab === 'offering'" x-transition>
            @foreach (var item in Model.Where(p => p.PostType == PostType.Offering))
            {
                @await Html.PartialAsync("_PostDetailsPartial", item)
            }
        </div>
    </div>
}
else
{
    <h1>No posts found</h1>
}